{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-web-development-laravel-yang-dilakukan-setelah-clone-dari-github-mdx-e2ce41b088fa723906cb.js","mappings":"oNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBP,EAAYG,GAAI,KAAM,KAAMI,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,oBAAqB,KAAMG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,iCAAkC,KAAMG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,4BAA6B,KAAMG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,6CAA8C,KACtb,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCRA,MAAMW,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAASF,EAChC,OAAOJ,EAAAA,cAAoBO,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/BX,EAAAA,cAAoB,IAAK,KAAMK,EAAKI,IAAIC,YAAYE,MAAON,EAAS,EAY5DO,EAAOC,IAAA,IAAC,KAACT,GAAKS,EAAA,OAAKd,EAAAA,cAAoBe,EAAAA,EAAK,CACvDJ,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASK,EAAiBxB,GACvC,OAAOQ,EAAAA,cAAoBG,EAAUX,EAAOQ,EAAAA,cAAoBiB,EAAqBzB,GACvF,C,+CCwCA,IA9DeY,IAA8B,IAA7B,UAAEI,EAAS,SAAEF,GAAUF,GACxBc,EAAAA,EAAAA,gBAAe,cAU5B,OACElB,EAAAA,cAAAA,EAAAA,SAAA,KAEEA,EAAAA,cAAA,cACEA,EAAAA,cAAA,OAAKmB,MAAM,2BACTnB,EAAAA,cAAA,OAAKmB,MAAM,0BACTnB,EAAAA,cAAA,KAAGmB,MAAM,eAAeC,KAAK,qBAAoB,qBACjDpB,EAAAA,cAAA,UAAQmB,MAAM,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,uBAAuB,gBAAc,sBAAsB,gBAAc,QAAQ,aAAW,qBAChLrB,EAAAA,cAAA,QAAMmB,MAAM,yBAEdnB,EAAAA,cAAA,OAAKmB,MAAM,+CAA+CG,GAAG,uBAC3DtB,EAAAA,cAAA,MAAImB,MAAM,2BACRnB,EAAAA,cAAA,MAAImB,MAAM,YAERnB,EAAAA,cAACuB,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,KAAI,SAEpCzB,EAAAA,cAAA,MAAImB,MAAM,YAERnB,EAAAA,cAAA,UAAIA,EAAAA,cAACuB,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,UAAS,WAE7CzB,EAAAA,cAAA,MAAImB,MAAM,YAERnB,EAAAA,cAAA,UAAIA,EAAAA,cAACuB,EAAAA,KAAI,CAACC,UAAU,WAAWC,GAAG,SAAQ,eAetDzB,EAAAA,cAAA,OAAKwB,UAAU,qCACbxB,EAAAA,cAAA,OAAKwB,UAAU,OACbxB,EAAAA,cAAA,OAAKwB,UAAU,kCAEbxB,EAAAA,cAAA,UAAKQ,GACJF,KAKN,C,+CC3CP,IAhBYF,IAAgB,IAAf,MAAEO,GAAOP,EACpB,MAAMC,GAAOa,EAAAA,EAAAA,gBAAe,cAU5B,OACElB,EAAAA,cAAA,aAAQW,EAAM,MAAIN,EAAKqB,KAAKC,aAAahB,MAAc,C,sECkBpD,MAAMiB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiB9B,GAC/B,MAAM+B,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf7B,EACFA,EAAW+B,GAGb,IAAIA,KAAsB/B,IAChC,CAAC+B,EAAmB/B,GACzB,C","sources":["webpack://nafis-muhammad/./blog/web_development/laravel/yang_dilakukan_setelah_clone_dari_github.mdx","webpack://nafis-muhammad/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://nafis-muhammad/./src/components/layout/layout.js","webpack://nafis-muhammad/./src/components/seo.js","webpack://nafis-muhammad/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"composer install\"), \"\\n\", React.createElement(_components.li, null, \"npm install / yarn (optional)\"), \"\\n\", React.createElement(_components.li, null, \"siapkan .env\"), \"\\n\", React.createElement(_components.li, null, \"php artisan key:generate\"), \"\\n\", React.createElement(_components.li, null, \"pastikan public/.htaccess aman terkendali\"), \"\\n\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"E:/myprojects/gatsby_js/nafism05.github.io-code/blog/web_development/laravel/yang_dilakukan_setelah_clone_dari_github.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../../components/layout/layout';\nimport Seo from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n  const data = useStaticQuery(graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`)\r\n\r\n  return (\r\n    <>\r\n      {/* <header>{data.site.siteMetadata.title}</header> */}\r\n      <header>\r\n        <nav class=\"navbar navbar-expand-lg\">\r\n          <div class=\"container px-0 px-md-3\">\r\n            <a class=\"navbar-brand\" href=\"nafismuhammad.com\">nafismuhammad.com</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo02\">\r\n              <ul class=\"navbar-nav mb-2 mb-lg-0\">\r\n                <li class=\"nav-item\">\r\n                  {/* <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n                  <Link className='nav-link' to=\"/\">Home</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  {/* <a class=\"nav-link\" href=\"#\">Link</a> */}\r\n                  <li><Link className='nav-link' to=\"/about\">About</Link></li>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  {/* <a class=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a> */}\r\n                  <li><Link className='nav-link' to=\"/blog\">Blog</Link></li>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      {/* <nav>\r\n        <ul>\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/about\">About</Link></li>\r\n          <li><Link to=\"/blog\">Blog</Link></li>\r\n        </ul>\r\n      </nav> */}\r\n      {/* <main> */}\r\n      <div className='container-fluid container-md my-5'>\r\n        <div className='row'>\r\n          <div className='col-lg-8 offset-lg-2 col-xs-12'>\r\n\r\n            <h1>{pageTitle}</h1>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* </main> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","_provideComponents","components","React","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","class","href","type","id","Link","className","to","site","siteMetadata","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}