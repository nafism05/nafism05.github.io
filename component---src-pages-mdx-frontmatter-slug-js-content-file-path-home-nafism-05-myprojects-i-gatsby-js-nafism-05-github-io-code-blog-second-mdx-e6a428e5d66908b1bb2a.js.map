{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-js-content-file-path-home-nafism-05-myprojects-i-gatsby-js-nafism-05-github-io-code-blog-second-mdx-e6a428e5d66908b1bb2a.js","mappings":"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","sources":["webpack://nafis-muhammad/./node_modules/@mdx-js/react/lib/index.js","webpack://nafis-muhammad/./blog/second.mdx","webpack://nafis-muhammad/./src/pages/{mdx.frontmatter__slug}.js","webpack://nafis-muhammad/./src/components/Post/PostCategories.jsx","webpack://nafis-muhammad/./src/components/Post/Post.jsx"],"sourcesContent":["import _defineProperty from \"/home/nafism05/myprojects_i/gatsby_js/nafism05.github.io-code/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\nimport React from 'react';\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\n\nexport var MDXContext = React.createContext({});\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\n\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\n\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext); // Memoize to avoid unnecessary top-level context changes\n\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n/** @type {Components} */\n\nvar emptyObject = {};\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\n\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n      children = _ref.children,\n      disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This is my first blog post! Isn't it \", React.createElement(_components.em, null, \"great\"), \"?\\nSome of my \", React.createElement(_components.strong, null, \"favorite\"), \" things are:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Petting dogs\"), \"\\n\", React.createElement(_components.li, null, \"Singing\"), \"\\n\", React.createElement(_components.li, null, \"Eating potato-based foods\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/nafism05/myprojects_i/gatsby_js/nafism05.github.io-code/blog/second.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport {Container, Row} from \"react-bootstrap\";\nimport config from \"../../config\";\nimport Post from \"../components/Post/Post\";\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, null, React.createElement(Container, null, React.createElement(Row, null, React.createElement(Post, {\n    config: config,\n    post: data.mdx.frontmatter,\n    children: children\n  }))));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        date(formatString: \"MMMM D, YYYY\")\n        title\n        slug\n        excerpt\n        author\n        categories\n      }\n    }\n  }\n`;\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React from \"react\";\nimport Link from \"../Link/Link\";\n// import { getCategoryPath } from \"../../utils/helpers\";\n// import gtagTrack from \"../../utils/gtag\";\n\nconst PostCategories = ({ categories }) => {\n  /* const categoryLink = (category) => (\n    <Link\n      to={getCategoryPath(category)}\n      label={category}\n      title={category}\n      onClick={() =>\n        gtagTrack(\"CategoriesLink\", \"click\", getCategoryPath(category), {\n          type: \"categories_item\",\n          value: getCategoryPath(category),\n          from: \"categories_list\",\n        })\n      }\n    >\n      {category}\n    </Link>\n  ); */\n\n  return (\n    <>\n      {/* {categories && false && (\n        <ul className=\"post-categories\">\n          {categories.map((category) => (\n            <li key={category}>{categoryLink(category)}</li>\n          ))}\n        </ul>\n      )} */}\n\n      <ul className=\"post-categories\">\n        <li>\n            <Link>{categories}</Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default PostCategories;\n","import React from \"react\";\n// import Comment from \"../Comment/Comment\";\nimport { Col, \n  // Badge \n} from \"react-bootstrap\";\n// import PostTags from \"./PostTags\";\n// import PostShare from \"./PostShare\";\n// import PostDate from \"./PostDate\";\nimport PostCategories from \"./PostCategories\";\nimport \"./Post.modules.scss\";\n\nconst Post = ({  post, children }) => {\n  // const post = postNode.frontmatter;\n\n  return (\n    <Col md={12} className=\"vno-article\">\n      <article>\n        <div className=\"mainheading\">\n          <h1 className=\"posttitle\">{post.title}</h1>\n          <span className=\"post-author\">{post.author}</span>\n          <span className=\"dot\" />\n          <span className=\"post-date\">\n          {post.date} \n          </span>\n        </div>\n        <div className=\"article-post\">\n          <div className=\"before-post\">\n            <PostCategories categories={post.categories[0]} />\n            {/* {post.categories[0]} */}\n          </div>\n          <div\n            className=\"post-content\"\n            // dangerouslySetInnerHTML={{ __html: children }}\n          >\n          </div>\n            {children}\n          <div className=\"after-post\">\n            {/* <PostShare postPath={slug} postNode={postNode} /> */}\n            {/* <PostTags tags={post.tags} /> */}\n          </div>\n          {/* <Comment\n            postNode={postNode}\n            lazyload={config.lazyLoadComments}\n            btnLoadComments={config.btnLoadComments}\n          /> */}\n        </div>\n      </article>\n    </Col>\n  );\n};\n\nexport default Post;\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","assign","p","em","strong","ul","li","_provideComponents","React","MDXLayout","wrapper","BlogPost","data","children","Layout","Container","Row","Post","config","post","mdx","frontmatter","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","categories","className","Link","Col","md","title","author","date"],"sourceRoot":""}